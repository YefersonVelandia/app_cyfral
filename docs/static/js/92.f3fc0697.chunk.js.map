{"version":3,"sources":["views/app-views/dashboards/cyfral/components/ListProcesses.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["ListProcesses","useState","procesos","setProcesos","getProcesos","a","axios","get","headers","localStorage","getItem","resp","data","console","log","useEffect","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"0LAiCeA,UA7BO,WAEpB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,oBAAS,GAAnD,mBAEMG,GAFN,UAEiB,uCAAG,4BAAAC,EAAA,4DAEN,4CAFM,kBAIKC,IAAMC,IAFjB,4CAEyB,CAC/BC,QAAS,CACL,UAAWC,aAAaC,QAAQ,cANxB,OAIRC,EAJQ,OASdR,EAAW,WAAX,cAAeD,GAAf,QAAyBS,EAAKC,QAC9BC,QAAQC,IAAIH,EAAKC,MAVH,gDAYhBC,QAAQC,IAAR,MAZgB,yDAAH,sDAmBjB,OAHAC,qBAAU,WACRX,MACA,IAEA,kD,6FCzBW,SAASY,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE","file":"static/js/92.f3fc0697.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { message } from \"antd\";\r\nimport axios from 'axios';\r\n\r\nconst ListProcesses = () => {\r\n\r\n  const [procesos, setProcesos] = useState([]);\r\n  const [submitLoading, setSubmitLoading] = useState(false)\r\n\r\n  const getProcesos = async () => {\r\n\r\n    const url = 'https://cyfral.herokuapp.com/api/products';\r\n    try {\r\n        const resp = await axios.get(url,{      \r\n          headers: {\r\n              'x-token': localStorage.getItem('x-token')\r\n          }\r\n        })\r\n        setProcesos(...procesos, resp.data)\r\n        console.log(resp.data);\r\n    } catch (error) {\r\n      console.log(error);     \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProcesos()\r\n  },[])\r\n  return (\r\n    <div>ListProcesses</div>\r\n  )\r\n}\r\n\r\nexport default ListProcesses","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}